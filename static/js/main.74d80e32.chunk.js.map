{"version":3,"sources":["logo.svg","components/questionComponent.jsx","quizService/index.js","components/scoreComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","QuestionComponent","props","handleAnswer","indexValue","answerPart","state","answers","filter","each","index","setState","className","this","question","map","key","onClick","handleScore","Component","qBank","correct","questionId","ScoreComponent","score","replay","App","getQuestions","n","Promise","resolve","sort","Math","random","slice","quizService","then","questionBank","computeScore","answer","count","console","log","length","userAnswer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.74d80e32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nclass QuestionComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answers: this.props.answers,\r\n    };\r\n  }\r\n\r\n  handleAnswer = (indexValue) => {\r\n    const answerPart = this.state.answers.filter((each, index) => {\r\n      if (index === indexValue) return each;\r\n    });\r\n    this.setState({\r\n      answers: answerPart,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"question\">{this.props.question}</h1>\r\n        {this.state.answers.map((each, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => {\r\n              this.handleAnswer(index);\r\n              this.props.handleScore(each);\r\n            }}\r\n            className=\"answerBtn\"\r\n          >\r\n            {each}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionComponent;\r\n","const qBank = [\n  {\n    question:\n      \"Virgin Trains, Virgin Atlantic and Virgin Racing, are all companies owned by which famous entrepreneur?   \",\n    answers: [\"Richard Branson\", \"Alan Sugar\", \"Donald Trump\", \"Bill Gates\"],\n    correct: \"Richard Branson\",\n    questionId: \"099099\"\n  },\n  {\n    question:\n      'Where is the train station \"Llanfair­pwllgwyngyll­gogery­chwyrn­drobwll­llan­tysilio­gogo­goch\"?',\n    answers: [\"Wales\", \"Moldova\", \"Czech Republic\", \"Denmark\"],\n    correct: \"Wales\",\n    questionId: \"183452\"\n  },\n  {\n    question:\n      \"Which company did Valve cooperate with in the creation of the Vive?\",\n    answers: [\"HTC\", \"Oculus\", \"Google\", \"Razer\"],\n    correct: \"HTC\",\n    questionId: \"267908\"\n  },\n  {\n    question: \"What's the name of Batman's  parents?\",\n    answers: [\n      \"Thomas & Martha\",\n      \"Joey & Jackie\",\n      \"Jason & Sarah\",\n      \"Todd & Mira\"\n    ],\n    correct: \"Thomas & Martha\",\n    questionId: \"333247\"\n  },\n  {\n    question: \"What is the most common surname Wales?\",\n    answers: [\"Jones\", \"Williams\", \"Davies\", \"Evans\"],\n    correct: \"Jones\",\n    questionId: \"496293\"\n  },\n  {\n    question:\n      \"What was the name of the WWF professional wrestling tag team made up of the wrestlers Ax and Smash?\",\n    answers: [\n      \"Demolition\",\n      \"The Dream Team\",\n      \"The Bushwhackers\",\n      \"The British Bulldogs\"\n    ],\n    correct: \"Demolition\",\n    questionId: \"588909\"\n  },\n  {\n    question:\n      'What name represents the letter \"M\" in the NATO phonetic alphabet?',\n    answers: [\"Mike\", \"Matthew\", \"Mark\", \"Max\"],\n    correct: \"Mike\",\n    questionId: \"648452\"\n  },\n  {\n    question: \"What is the first book of the Old Testament?\",\n    answers: [\"Genesis\", \"Exodus\", \"Leviticus\", \"Numbers\"],\n    correct: \"Genesis\",\n    questionId: \"786649\"\n  },\n  {\n    question:\n      \"In the video-game franchise Kingdom Hearts, the main protagonist, carries a weapon with what shape?\",\n    answers: [\"Key\", \"Sword\", \"Pen\", \"Cellphone\"],\n    correct: \"Key\",\n    questionId: \"839754\"\n  },\n  {\n    question:\n      \"Which best selling toy of 1983 caused hysteria, resulting in riots breaking out in stores?\",\n    answers: [\n      \"Cabbage Patch Kids\",\n      \"Transformers\",\n      \"Care Bears\",\n      \"Rubik’s Cube\"\n    ],\n    correct: \"Cabbage Patch Kids\",\n    questionId: \"98390\"\n  },\n  {\n    question: \"What does a funambulist walk on?\",\n    answers: [\"A Tight Rope\", \"Broken Glass\", \"Balls\", \"The Moon\"],\n    correct: \"A Tight Rope\",\n    questionId: \"1071006\"\n  },\n  {\n    question: \"In past times, what would a gentleman keep in his fob pocket?\",\n    answers: [\"Watch\", \"Money\", \"Keys\", \"Notebook\"],\n    correct: \"Watch\",\n    questionId: \"1174154\"\n  },\n  {\n    question: \"Area 51 is located in which US state?\",\n    answers: [\"Nevada\", \"Arizona\", \"New Mexico\", \"Utah\"],\n    correct: \"Nevada\",\n    questionId: \"1226535\"\n  },\n  {\n    question: \"How would one say goodbye in Spanish?\",\n    answers: [\"Adiós\", \" Hola\", \"Au Revoir\", \"Salir\"],\n    correct: \"Adiós\",\n    questionId: \"1310938\"\n  },\n  {\n    question: \"What is the largest organ of the human body?\",\n    answers: [\"Skin\", \"Heart\", \"large Intestine\", \"Liver\"],\n    correct: \"Skin\",\n    questionId: \"1436873\"\n  },\n  {\n    question: \"Which sign of the zodiac is represented by the Crab?\",\n    answers: [\"Cancer\", \"Libra\", \"Virgo\", \"Sagittarius\"],\n    correct: \"Cancer\",\n    questionId: \"1515110\"\n  },\n  {\n    question: \"On a dartboard, what number is directly opposite No. 1?\",\n    answers: [\"19\", \"20\", \"12\", \"15\"],\n    correct: \"19\",\n    questionId: \"1642728\"\n  },\n  {\n    question:\n      \"What does the 'S' stand for in the abbreviation SIM, as in SIM card? \",\n    answers: [\"Subscriber\", \"Single\", \"Secure\", \"Solid\"],\n    correct: \"Subscriber\",\n    questionId: \"1747256\"\n  },\n  {\n    question:\n      \"What word represents the letter 'T' in the NATO phonetic alphabet?\",\n    answers: [\"Tango\", \"Target\", \"Taxi\", \"Turkey\"],\n    correct: \"Tango\",\n    questionId: \"1822532\"\n  },\n  {\n    question: \"Which American president appears on a one dollar bill?\",\n    answers: [\n      \"George Washington\",\n      \"Thomas Jefferson\",\n      \"Abraham Lincoln\",\n      \"Benjamin Franklin\"\n    ],\n    correct: \"George Washington\",\n    questionId: \"195075\"\n  },\n  {\n    question: 'What is \"dabbing\"?',\n    answers: [\"A dance\", \"A medical procedure\", \"A sport\", \"A language\"],\n    correct: \"A dance\",\n    questionId: \"2019778\"\n  },\n  {\n    question: \"What is the name of the Jewish New Year?\",\n    answers: [\"Rosh Hashanah\", \"Elul\", \"New Year\", \"Succoss\"],\n    correct: \"Rosh Hashanah\",\n    questionId: \"2134343\"\n  },\n  {\n    question: \"Which one of the following rhythm games was made by Harmonix?\",\n    answers: [\n      \"Rock Band\",\n      \"Meat Beat Mania\",\n      \"Guitar Hero Live\",\n      \"Dance Dance Revolution\"\n    ],\n    correct: \"Rock Band\",\n    questionId: \"2210799\"\n  },\n  {\n    question:\n      \"What type of animal was Harambe, who was shot after a child fell into it's enclosure at the Cincinnati Zoo?\",\n    answers: [\"Gorilla\", \"Tiger\", \"Panda\", \"Crocodile\"],\n    correct: \"Gorilla\",\n    questionId: \"2379831\"\n  },\n  {\n    question: \"Red Vines is a brand of what type of candy?\",\n    answers: [\"Licorice\", \"Lollipop\", \"Chocolate\", \"Bubblegum\"],\n    correct: \"Licorice\",\n    questionId: \"2426418\"\n  },\n  {\n    question: \"What is the nickname of the US state of California?\",\n    answers: [\"Golden State\", \"Sunshine State\", \"Bay State\", \"Treasure State\"],\n    correct: \"Golden State\",\n    questionId: \"2510086\"\n  },\n  {\n    question: \"What is on display in the Madame Tussaud's museum in London?\",\n    answers: [\n      \"Wax sculptures\",\n      \"Designer clothing\",\n      \"Unreleased film reels\",\n      \"Vintage cars\"\n    ],\n    correct: \"Wax sculptures\",\n    questionId: \"2685745\"\n  },\n  {\n    question:\n      \"What was the nickname given to the Hughes H-4 Hercules, a heavy transport flying boat which achieved flight in 1947?\",\n    answers: [\"Spruce Goose\", \"Noah's Ark\", \"Fat Man\", \"Trojan Horse\"],\n    correct: \"Spruce Goose\",\n    questionId: \"2796884\"\n  },\n  {\n    question: \"Which of these colours is NOT featured in the logo for Google?\",\n    answers: [\"Pink\", \"Yellow\", \"Blue\", \"Green\"],\n    correct: \"Pink\",\n    questionId: \"2838900\"\n  },\n  {\n    question: 'What is the French word for \"hat\"?',\n    answers: [\"Chapeau\", \"Bonnet\", \" Écharpe\", \" Casque\"],\n    correct: \"Chapeau\",\n    questionId: \"298060\"\n  },\n  {\n    question: \"Five dollars is worth how many nickles?\",\n    answers: [\"100\", \"50\", \"25\", \"69\"],\n    correct: \"100\",\n    questionId: \"3096579\"\n  },\n  {\n    question: \"Who is depicted on the US hundred dollar bill?\",\n    answers: [\n      \"Benjamin Franklin\",\n      \"George Washington\",\n      \"Abraham Lincoln\",\n      \"Thomas Jefferson\"\n    ],\n    correct: \"Benjamin Franklin\",\n    questionId: \"3182461\"\n  },\n  {\n    question: \"What do the letters in the GMT time zone stand for?\",\n    answers: [\n      \"Greenwich Mean Time\",\n      \"Global Meridian Time\",\n      \"General Median Time\",\n      \"Glasgow Man Time\"\n    ],\n    correct: \"Greenwich Mean Time\",\n    questionId: \"3239112\"\n  },\n  {\n    question: \"Which one of these is not a typical European sword design?\",\n    answers: [\"Scimitar\", \"Falchion\", \"Ulfberht\", \"Flamberge\"],\n    correct: \"Scimitar\",\n    questionId: \"3318503\"\n  },\n  {\n    question:\n      'According to Sherlock Holmes, \"If you eliminate the impossible, whatever remains, however improbable, must be the...\"',\n    answers: [\"Truth\", \"Answer\", \"Cause\", \"Source\"],\n    correct: \"Truth\",\n    questionId: \"3410327\"\n  },\n  {\n    question: \"What is the name of Poland in Polish?\",\n    answers: [\"Polska\", \"Pupcia\", \"Polszka\", \"Póland\"],\n    correct: \"Polska\",\n    questionId: \"3542596\"\n  },\n  {\n    question: \"The New York Times slogan is, “All the News That’s Fit to…”\",\n    answers: [\"Print\", \"Digest\", \"Look\", \"Read\"],\n    correct: \"Print\",\n    questionId: \"3667517\"\n  },\n  {\n    question: \"What do the letters of the fast food chain KFC stand for?\",\n    answers: [\n      \"Kentucky Fried Chicken\",\n      \"Kentucky Fresh Cheese\",\n      \"Kibbled Freaky Cow\",\n      \"Kiwi Food Cut\"\n    ],\n    correct: \"Kentucky Fried Chicken\",\n    questionId: \"3791672\"\n  },\n  {\n    question: \"Which restaurant's mascot is a clown?\",\n    answers: [\"McDonald's\", \"Whataburger\", \"Burger King\", \"Sonic\"],\n    correct: \"McDonald's\",\n    questionId: \"3893585\"\n  },\n  {\n    question: 'What color is the \"Ex\" in FedEx Ground?',\n    answers: [\"Green\", \"Red\", \"Light Blue\", \"Orange\"],\n    correct: \"Green\",\n    questionId: \"3913430\"\n  },\n  {\n    question: \"How tall is the Burj Khalifa?\",\n    answers: [\"2,722 ft\", \"2,717 ft\", \"2,546 ft\", \"3,024 ft\"],\n    correct: \"2,722 ft\",\n    questionId: \"4049121\"\n  },\n  {\n    question:\n      \"Which of the following card games revolves around numbers and basic math?\",\n    answers: [\"Uno\", \"Go Fish\", \"Twister\", \"Munchkin\"],\n    correct: \"Uno\",\n    questionId: \"4150746\"\n  },\n  {\n    question:\n      \"What machine element is located in the center of fidget spinners?\",\n    answers: [\"Bearings\", \"Axles\", \"Gears\", \"Belts\"],\n    correct: \"Bearings\",\n    questionId: \"4235063\"\n  },\n  {\n    question: \"Which sign of the zodiac comes between Virgo and Scorpio?\",\n    answers: [\"Libra\", \"Gemini\", \"Taurus\", \"Capricorn\"],\n    correct: \"Libra\",\n    questionId: \"4321002\"\n  },\n  {\n    question: \"Which of the following presidents is not on Mount Rushmore?\",\n    answers: [\n      \"John F. Kennedy\",\n      \"Theodore Roosevelt\",\n      \"Abraham Lincoln\",\n      \"Thomas Jefferson\"\n    ],\n    correct: \"John F. Kennedy\",\n    questionId: \"4442286\"\n  },\n  {\n    question: \"What is Tasmania?\",\n    answers: [\n      \"An Australian State\",\n      \"A flavor of Ben and Jerry's ice-cream\",\n      \"A Psychological Disorder\",\n      \"The Name of a Warner Brothers Cartoon Character\"\n    ],\n    correct: \"An Australian State\",\n    questionId: \"4564430\"\n  },\n  {\n    question: \"What company developed the vocaloid Hatsune Miku?\",\n    answers: [\"Crypton Future Media\", \"Sega\", \"Sony\", \"Yamaha Corporation\"],\n    correct: \"Crypton Future Media\",\n    questionId: \"4630606\"\n  },\n  {\n    question:\n      \"Which country, not including Japan, has the most people of japanese decent?\",\n    answers: [\"Brazil\", \"China\", \"South Korea\", \"United States of America\"],\n    correct: \"Brazil\",\n    questionId: \"4795960\"\n  },\n  {\n    question: \"Which candy is NOT made by Mars?\",\n    answers: [\"Almond Joy\", \"M&M's\", \"Twix\", \"Snickers\"],\n    correct: \"Almond Joy\",\n    questionId: \"4811162\"\n  },\n  {\n    question: \"In which fast food chain can you order a Jamocha Shake?\",\n    answers: [\"Arby's\", \"McDonald's\", \"Burger King\", \"Wendy's\"],\n    correct: \"Arby's\",\n    questionId: \"4982981\"\n  }\n];\n\nexport default (n = 5) =>\n  Promise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n","import React, { Component } from \"react\";\r\n\r\nconst ScoreComponent = (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"score\">Your Score = {props.score}/5</h1>\r\n      <button className=\"playBtn\" onClick={props.replay}>\r\n        Play Again!!\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreComponent;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport QuestionComponent from \"./components/questionComponent\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./style.css\";\nimport quizService from \"./quizService\";\nimport ScoreComponent from \"./components/scoreComponent\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questionBank: [],\n      score: 0,\n      count: 0,\n    };\n  }\n\n  getQuestions = () => {\n    quizService().then((each) => {\n      this.setState({\n        questionBank: each,\n      });\n    });\n  };\n\n  computeScore = (answer, correct) => {\n    if (answer === correct)\n      this.setState({\n        score: this.state.score + 1,\n      });\n    this.setState({\n      count: this.state.count + 1,\n    });\n  };\n\n  replay = () => {\n    console.log(this.state.questionBank);\n    this.getQuestions();\n    console.log(this.state.questionBank);\n    this.setState({\n      score: 0,\n      count: 0,\n    });\n  };\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"title\">QuizTime</div>\n        {this.state.questionBank.length > 0 &&\n          this.state.count < 5 &&\n          this.state.questionBank.map((each) => (\n            <QuestionComponent\n              key={each.questionId}\n              className=\"questionBox\"\n              question={each.question}\n              answers={each.answers}\n              handleScore={(userAnswer) =>\n                this.computeScore(userAnswer, each.correct)\n              }\n            />\n          ))}\n        {this.state.count === 5 ? (\n          <ScoreComponent score={this.state.score} replay={this.replay} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}